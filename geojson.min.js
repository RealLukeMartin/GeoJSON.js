// geojson.js - v0.4.1
// (c) 2019 Casey Cesari, MIT License

!function(h){function m(){var r=1<=arguments.length?[].slice.call(arguments,0):[],e=r.shift(),t=r.shift();Error.apply(this,r),this.message=this.message||"Invalid Geometry: item: "+JSON.stringify(e)+", params: "+JSON.stringify(t)}h.version="0.4.1",h.defaults={doThrows:{invalidGeometry:!1}},m.prototype=Error,h.errors={InvalidGeometryError:m},h.isGeometryValid=function(r){return!(!r||!Object.keys(r).length)&&(!!r.type&&!!r.coordinates&&Array.isArray(r.coordinates)&&!!r.coordinates.length)},h.parse=function(r,e,t){var o,n,i=function(r,e){var t=r||{};for(var o in e)e.hasOwnProperty(o)&&!t[o]&&(t[o]=e[o]);return t}(e,this.defaults);if(s.length=0,function(r){for(var e in r.geom={},r)r.hasOwnProperty(e)&&-1!==a.indexOf(e)&&(r.geom[e]=r[e],delete r[e]);!function(r){for(var e in r)r.hasOwnProperty(e)&&("string"==typeof r[e]?s.push(r[e]):"object"==typeof r[e]&&(s.push(r[e][0]),s.push(r[e][1])));if(0===s.length)throw new Error("No geometry attributes specified")}(r.geom)}(i),n=function(t){var e;t.exclude||t.include?t.include?e=function(e){t.include.forEach(function(r){e[r]=this[r]},this)}:t.exclude&&(e=function(r){for(var e in this)this.hasOwnProperty(e)&&-1===s.indexOf(e)&&-1===t.exclude.indexOf(e)&&(r[e]=this[e])}):e=function(r){for(var e in this)this.hasOwnProperty(e)&&-1===s.indexOf(e)&&(r[e]=this[e])};return function(){var r={};return e.call(this,r),t.extra&&function(r,e){for(var t in e)e.hasOwnProperty(t)&&(r[t]=e[t])}(r,t.extra),r}}(i),Array.isArray(r)?(o={type:"FeatureCollection",features:[]},r.forEach(function(r){o.features.push(p({item:r,params:i,propFunc:n}))}),u(o,i)):u(o=p({item:r,params:i,propFunc:n}),i),!t||"function"!=typeof t)return o;t(o)};var a=["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeoJSON"],s=[];function u(r,e){if(e.crs&&function(r){{if("name"===r.type){if(r.properties&&r.properties.name)return!0;throw new Error('Invalid CRS. Properties must contain "name" key')}if("link"!==r.type)throw new Error('Invald CRS. Type attribute must be "name" or "link"');if(r.properties&&r.properties.href&&r.properties.type)return!0;throw new Error('Invalid CRS. Properties must contain "href" and "type" key')}}(e.crs)&&(e.isPostgres?r.geometry.crs=e.crs:r.crs=e.crs),e.bbox&&(r.bbox=e.bbox),e.extraGlobal)for(var t in r.properties={},e.extraGlobal)r.properties[t]=e.extraGlobal[t]}function p(r){var e=r.item,t=r.params,o=r.propFunc,n={type:"Feature"};return n.geometry=function o(n,r){var e={};for(var t in r.geom){var i,a,s=r.geom[t],u=[];if("string"==typeof s&&n.hasOwnProperty(s))"GeoJSON"===t?e=n[s]:(e.type=t,e.coordinates=n[s]);else if("object"!=typeof s||Array.isArray(s))if(Array.isArray(s)&&n.hasOwnProperty(s[0])&&n.hasOwnProperty(s[1])&&n.hasOwnProperty(s[2]))e.type=t,e.coordinates=[Number(n[s[1]]),Number(n[s[0]]),Number(n[s[2]])];else if(Array.isArray(s)&&n.hasOwnProperty(s[0])&&n.hasOwnProperty(s[1]))e.type=t,e.coordinates=[Number(n[s[1]]),Number(n[s[0]])];else if(Array.isArray(s)&&d(s[0])&&d(s[1])&&d(s[2])){for(var p=0;p<s.length;p++){a=s[p].split("."),i=n;for(var f=0;f<a.length;f++){if(null==i||!i.hasOwnProperty(a[f]))return!1;i=i[a[f]]}u[p]=i}e.type=t,e.coordinates=[Number(u[1]),Number(u[0]),Number(u[2])]}else if(Array.isArray(s)&&d(s[0])&&d(s[1])){for(var c=0;c<s.length;c++){a=s[c].split("."),i=n;for(var y=0;y<a.length;y++){if(null==i||!i.hasOwnProperty(a[y]))return!1;i=i[a[y]]}u[c]=i}e.type=t,e.coordinates=[Number(u[1]),Number(u[0])]}else Array.isArray(s)&&"Object"===s[0].constructor.name&&"coordinates"===Object.keys(s[0])[0]&&(e.type=t,e.coordinates=[Number(n.coordinates[s[0].coordinates.indexOf("lng")]),Number(n.coordinates[s[0].coordinates.indexOf("lat")])]);else{var l=Object.keys(s).map(function(r){var e=s[r],t=n[r];return o(t,{geom:{Point:e}})});e.type=t,e.coordinates=[].concat(l.map(function(r){return r.coordinates}))}}if(r.doThrows&&r.doThrows.invalidGeometry&&!h.isGeometryValid(e))throw new m(n,r);return e}(e,t),n.properties=o.call(e),n}function d(r){return/^.+\..+$/.test(r)}}("object"==typeof module?module.exports:window.GeoJSON={});